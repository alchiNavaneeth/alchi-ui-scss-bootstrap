@import '../abstract/variables';

@import "../../../../node_modules/bootstrap/scss/functions";
@import "../../../../node_modules/bootstrap/scss/variables";
@import "../../../../node_modules/bootstrap/scss/mixins";
@import "../../../../node_modules/bootstrap/scss/utilities";
@import "../../../../node_modules/bootstrap/scss/utilities/api";


@import "miscellaneous";

@mixin apply-superior {

  @each $theme, $colors in $superior-theme {

    @if $theme == 'superior-dark' {
      .#{$theme} {
        @content($colors, true);
      }
    }
    @else {
      @content($colors, false)
    }

  }

};


@include apply-superior using ($colors, $type) {

  $theme-colors: $colors;
  $isdark: $type;

  $custom-colors: (
    "tertiary": $tertiary,
    "primary-dark": $primary-dark,
    "info-light": $info-light,
    "success-light": $success-light,
    "danger-light": $danger-light,
    "warning-light": $warning-light,
    "gray": $gray,
    "gray-dark": $gray-dark,
    "gray-light": $gray-light
  );

  $theme-colors: map-merge($custom-colors, $theme-colors);

  @import "utilities";
  @import '../../../../node_modules/bootstrap/scss/bootstrap';

}

@import 'https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap';


